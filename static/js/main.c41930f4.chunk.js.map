{"version":3,"sources":["components/main-page/params-table.module.css","components/creds-prompt/creds-prompt.module.css","components/link-button/link-button.module.css","components/error-div/error-div.module.css","components/page/page.module.css","components/link-button/index.tsx","components/error-div/index.tsx","common/helpers.ts","components/creds-prompt/import-aws-creds.tsx","core/use-local-storage.ts","core/use-aws-credentials.ts","components/creds-prompt/index.tsx","components/route-with-credentials/index.tsx","components/page/index.tsx","components/main-page/missing-value-cell.tsx","components/main-page/single-value-cell.tsx","components/main-page/multi-value-cell.tsx","components/main-page/table.tsx","components/main-page/index.tsx","core/use-aws-parameters-storage.ts","components/app/index.tsx","index.tsx"],"names":["module","exports","LinkButton","children","rest","className","cn","styles","linkButton","ErrorDiv","error","errorDiv","message","maskKey","key","split","map","e","i","length","join","tryCatch","block","catchBlock","r","Promise","catch","readFile","a","window","showOpenFilePicker","multiple","credentialsFileHandler","getFile","credentialsFile","name","Error","ini","text","result","parse","schema","yup","shape","aws_access_key_id","required","aws_secret_access_key","Object","entries","filter","v","isValidSync","entryName","accessKey","secretKey","ImportAwsCredentials","onCredentialsSelected","useState","setError","credentials","setCredentials","useEffect","onImportClick","undefined","size","onClick","getItemSafeSync","value","localStorage","getItem","JSON","console","removeItem","fetcher","useLocalStorage","useSWR","initialData","data","mutate","setValue","newValue","setItem","stringify","removeValue","useAwsCredentials","removeCredentials","CredentialsPage","history","useHistory","location","useLocation","returnTo","state","from","push","span","verticalLine","RouteWithCredentials","to","pathname","PageTemplate","branch","commit","date","shortHash","pageContainer","contentWrapper","footer","dayjs","fromNow","MissingValueCell","missingValueCell","menuId","SingleValueCell","Value","parameter","colorClassMap","show","useContextMenu","id","onContextMenu","event","preventDefault","props","valueCell","get","truncate","SingleValueCellMenu","animation","clipboardy","copyValueMenuIcon","MultiValueCell","parameters","Set","Prefix","prefix","slice","lastIndexOf","replace","prefixes","n","s","colorClasses","consistent0","consistent1","consistent2","consistent3","consistent4","consistent5","consistent6","consistent7","consistent8","PrefixRow","paramsForName","colorClassByValue","Map","_","countBy","forGivenPrefix","Name","includes","isValueMissing","isSingleValue","ParametersTable","params","search","setSearch","sortedParams","useMemo","forEach","p","old","set","Array","sort","fused","trim","item","matches","refIndex","Fuse","keys","includeMatches","minMatchCharLength","includeScore","score","placeholder","onChange","target","paramsTable","nameTh","envTh","searchWords","flatMap","indices","tuple","width","textToHighlight","paramsPrefixes","tomcat","lservice","allapps","MainPage","loading","setLoading","errors","setErrors","ssm","AWS","SSM","region","Credentials","fetchedAt","refreshParams","flatPrefixes","allPrefixes","resolve","page","getParametersByPath","Path","Recursive","WithDecryption","eachPage","err","doneCallback","Parameters","Date","mode","App","path","exact","extend","relativeTime","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c41930f4.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"allTheSameRow\":\"params-table_allTheSameRow__2SPTF\",\"paramsTable\":\"params-table_paramsTable__sEcuf\",\"missingValueCell\":\"params-table_missingValueCell__3FAgM\",\"nameTh\":\"params-table_nameTh__2elJw\",\"envTh\":\"params-table_envTh__20z_z\",\"valueCell\":\"params-table_valueCell__3uKF-\",\"consistent0\":\"params-table_consistent0__nk44Y\",\"consistent1\":\"params-table_consistent1__3Z1kP\",\"consistent2\":\"params-table_consistent2__3wpqd\",\"consistent3\":\"params-table_consistent3__2BjrA\",\"consistent4\":\"params-table_consistent4__3gna6\",\"consistent5\":\"params-table_consistent5__qe5XP\",\"consistent6\":\"params-table_consistent6__1dqVQ\",\"consistent7\":\"params-table_consistent7__nSmXD\",\"consistent8\":\"params-table_consistent8__3hWSc\",\"copyValueMenuIcon\":\"params-table_copyValueMenuIcon__1PEoo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"verticalLine\":\"creds-prompt_verticalLine__Tx2pu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"linkButton\":\"link-button_linkButton__2xyCc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"errorDiv\":\"error-div_errorDiv__1C-Yp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wideDiv\":\"page_wideDiv__2inSG\",\"pageContainer\":\"page_pageContainer__sagIe\",\"contentWrapper\":\"page_contentWrapper__3aSSW\",\"footer\":\"page_footer__3hx7W\",\"branch\":\"page_branch__1t1gv\"};","import React, { FC } from 'react';\nimport cn from 'classnames';\nimport styles from './link-button.module.css';\n\nexport const LinkButton: FC<React.ButtonHTMLAttributes<any>> = ({ children, ...rest }) => {\n  return (\n    <button {...rest} className={cn('wt-link', styles.linkButton)}>\n      {children}\n    </button>\n  );\n};\n","import React, { FC } from 'react';\nimport styles from './error-div.module.css';\nimport cn from 'classnames';\n\nexport const ErrorDiv: FC<React.HTMLAttributes<HTMLDivElement> & { error?: Error }> = ({ className, error }) => {\n  if (!error) return null;\n  return <div className={cn(styles.errorDiv, 'wt-text-2', className)}>Error: {error.message}</div>;\n};\n","export const maskKey = (key: string): string => {\n  return key\n    .split('')\n    .map((e, i) => (i < 6 || i > key.length - 4 ? e : '*'))\n    .join('');\n};\n\nexport const tryCatch = (block: () => void | Promise<void>, catchBlock: (e: Error) => void) => {\n  try {\n    const r = block();\n    if (r instanceof Promise) {\n      r.catch(catchBlock);\n    }\n  } catch (e) {\n    catchBlock(e);\n  }\n};\n","import React, { FC, SyntheticEvent, useEffect, useState } from 'react';\nimport { LinkButton } from '../link-button';\nimport { ErrorDiv } from '../error-div';\nimport ini from 'ini';\nimport * as yup from 'yup';\nimport { AwsCredentials } from '../../core/use-aws-credentials';\nimport { List, ListItem } from '@webteam/list';\nimport { maskKey, tryCatch } from '../../common/helpers';\n\ndeclare global {\n  interface Window {\n    showOpenFilePicker: any;\n  }\n}\n\ntype CredentialsFileEntry = {\n  aws_access_key_id: string;\n  aws_secret_access_key: string;\n};\n\ntype NamedAwsCredentials = [string, AwsCredentials];\n\nconst readFile = async (): Promise<NamedAwsCredentials[]> => {\n  const [credentialsFileHandler] = await window.showOpenFilePicker({\n    multiple: false,\n  });\n  const credentialsFile: File = await credentialsFileHandler.getFile();\n  if (credentialsFile.name !== 'credentials') throw new Error(\"File should be named 'credentials'\");\n  const result = ini.parse(await credentialsFile.text());\n  const schema = yup.object().shape({\n    aws_access_key_id: yup.string().required(),\n    aws_secret_access_key: yup.string().required(),\n  });\n  return Object.entries(result)\n    .filter(([, v]) => schema.isValidSync(v))\n    .map(([entryName, { aws_access_key_id, aws_secret_access_key }]: [string, CredentialsFileEntry]) => [\n      entryName,\n      {\n        accessKey: aws_access_key_id,\n        secretKey: aws_secret_access_key,\n      },\n    ]);\n};\n\nexport const ImportAwsCredentials: FC<{ onCredentialsSelected: (credentials: AwsCredentials) => void }> = ({ onCredentialsSelected }) => {\n  const [error, setError] = useState<Error>();\n  const [credentials, setCredentials] = useState<NamedAwsCredentials[]>();\n  useEffect(() => {\n    if (credentials && credentials.length === 1) onCredentialsSelected(credentials[0][1]);\n  }, [credentials, onCredentialsSelected]);\n\n  const onImportClick = async () => {\n    setError(undefined);\n    tryCatch(async () => setCredentials(await readFile()), setError);\n  };\n\n  if (credentials)\n    return (\n      <>\n        <h4 className=\"wt-h4\">Select profile to use:</h4>\n        <div className=\"wt-offset-top-12\" />\n        <List size=\"xs\">\n          {credentials.map(([name, credentials]) => (\n            <ListItem key={name} onClick={() => onCredentialsSelected(credentials)}>\n              {name} ({maskKey(credentials.accessKey)})\n            </ListItem>\n          ))}\n        </List>\n      </>\n    );\n  return (\n    <>\n      <div className=\"wt-text-2\">\n        <LinkButton onClick={onImportClick}>Import</LinkButton> credentials from <strong>~/.aws/credentials</strong>\n        <ErrorDiv className=\"wt-offset-top-12\" error={error} />\n      </div>\n    </>\n  );\n};\n","import useSWR from 'swr/esm';\n\nconst getItemSafeSync = <T>(key: string): T | undefined => {\n  try {\n    const value = localStorage.getItem(key);\n    return value === null ? undefined : JSON.parse(value);\n  } catch (e) {\n    console.error('Failed to read value from local storage', e);\n    localStorage.removeItem(key);\n    return undefined;\n  }\n};\n\nconst fetcher = async (key: string): Promise<any> => getItemSafeSync(key);\n\nexport interface LocalStorageValue<T> {\n  value: T | undefined;\n  setValue: (newValue: T) => void;\n  removeValue: () => void;\n}\n\nexport const useLocalStorage = <T>(key: string): LocalStorageValue<T> => {\n  const { data, mutate } = useSWR<T>(key, fetcher, {\n    initialData: getItemSafeSync(key),\n  });\n  const setValue = (newValue: T) => {\n    localStorage.setItem(key, JSON.stringify(newValue));\n    mutate(newValue).catch(console.error);\n  };\n  const removeValue = () => {\n    localStorage.removeItem(key);\n    mutate(undefined).catch(console.error);\n  };\n  return { value: data, setValue, removeValue };\n};\n","import { useLocalStorage } from './use-local-storage';\n\nexport interface AwsCredentials {\n  accessKey: string;\n  secretKey: string;\n}\n\nexport const useAwsCredentials = () => {\n  const { value, setValue, removeValue } = useLocalStorage<AwsCredentials>('aws-credentials');\n  return { credentials: value, setCredentials: setValue, removeCredentials: removeValue };\n};\n","import React, { FC, useEffect } from 'react';\nimport { Col, Row } from '@webteam/layout';\nimport styles from './creds-prompt.module.css';\nimport { ImportAwsCredentials } from './import-aws-creds';\nimport { AwsCredentials, useAwsCredentials } from '../../core/use-aws-credentials';\nimport { useHistory, useLocation } from 'react-router-dom';\n\nexport const CredentialsPage: FC<{}> = () => {\n  const { credentials, setCredentials } = useAwsCredentials();\n  const history = useHistory();\n  const location = useLocation() as any;\n  const returnTo = location?.state?.from ?? '/';\n  const onCredentialsSelected = (value: AwsCredentials) => {\n    setCredentials(value);\n    history.push(returnTo);\n  };\n  useEffect(() => {\n    if (credentials !== undefined) history.push(returnTo);\n  }, [credentials, history, returnTo]);\n  return (\n    <Row>\n      <Col span={4}>\n        <ImportAwsCredentials onCredentialsSelected={onCredentialsSelected} />\n        {/*<CredentialsManualInput />*/}\n      </Col>\n      <Col span=\"inline\">\n        <div className={styles.verticalLine} />\n      </Col>\n      <Col span=\"inline\">\n        <ul className=\"wt-ul\">\n          <li>Keys will be used for read-only operations</li>\n          <li>Keys will be stored in browser local storage</li>\n          <li>Keys will be used only from this webapp, they are not transferred anywhere</li>\n          <li>You can remove them anytime you want later by clicking 'Sign out' link</li>\n        </ul>\n      </Col>\n    </Row>\n  );\n};\n","import React, { FC } from 'react';\nimport { Redirect, Route, RouteProps } from 'react-router-dom';\nimport { useAwsCredentials } from '../../core/use-aws-credentials';\n\nexport const RouteWithCredentials: FC<RouteProps> = ({ children, ...rest }) => {\n  const { credentials } = useAwsCredentials();\n  return (\n    <Route {...rest}>\n      {({ location }) => {\n        if (credentials === undefined) {\n          return <Redirect to={{ pathname: '/credentials', state: { from: location } }} />;\n        }\n        return children;\n      }}\n    </Route>\n  );\n};\n","import React, { FC } from 'react';\nimport { Hr, LayoutContent, LayoutFooter, LayoutHeader } from '@webteam/layout';\nimport GitInfo from 'react-git-info/macro';\nimport dayjs from 'dayjs';\nimport styles from './page.module.css';\n\nexport const PageTemplate: FC = ({ children }) => {\n  const {\n    branch,\n    commit: { date, shortHash, message },\n  } = GitInfo();\n  return (\n    <div className={styles.pageContainer}>\n      <div className={styles.contentWrapper}>\n        <LayoutHeader>\n          <h1 className=\"wt-h1\">Panamera: parameter naming errors resolution assistant</h1>\n        </LayoutHeader>\n        <LayoutContent className=\"wt-offset-top-24\">{children}</LayoutContent>\n      </div>\n      <LayoutFooter className={styles.footer}>\n        <Hr />\n        <p className=\"wt-text-3\">\n          {shortHash} | <span className={styles.branch}>{branch}</span> | built {dayjs(date).fromNow()} | {message}\n        </p>\n      </LayoutFooter>\n    </div>\n  );\n};\n","import React, { FC } from 'react';\nimport styles from './params-table.module.css'\n\nexport const MissingValueCell: FC = () => {\n  return <td className={styles.missingValueCell}>{'<Value is missing>'}</td>\n};\n","import React, { FC } from 'react';\nimport { ParameterWithPrefix } from '../../core/use-aws-parameters-storage';\nimport { truncate } from './table';\nimport styles from './params-table.module.css';\nimport cn from 'classnames';\nimport { Item, Menu, useContextMenu } from 'react-contexify';\nimport { TriggerEvent } from 'react-contexify/src/types/index';\nimport { CopyIcon } from '@webteam/icons';\nimport * as clipboardy from 'clipboardy';\n\nconst menuId = 'SingleValueCell';\n\nexport const SingleValueCell: FC<{ parameter: ParameterWithPrefix; colorClassMap: Map<string | undefined, string> }> = ({ parameter: { Value }, colorClassMap }) => {\n  const { show } = useContextMenu({ id: menuId });\n\n  function onContextMenu(event: TriggerEvent) {\n    event.preventDefault();\n    show(event, { props: { value: Value } });\n  }\n\n  return (\n    <td onContextMenu={onContextMenu} className={cn(styles.valueCell, colorClassMap.get(Value))}>\n      {truncate(24, Value!)}\n    </td>\n  );\n};\n\nexport const SingleValueCellMenu: FC = () => {\n  return (\n    <Menu id={menuId} animation={false}>\n      <Item onClick={({ props: { value } }) => clipboardy.write(value)} className=\"wt-text-3\">\n        <CopyIcon size=\"xs\" className={styles.copyValueMenuIcon} /> Copy value\n      </Item>\n    </Menu>\n  );\n};\n","import React, { FC } from 'react';\nimport { ParameterWithPrefix } from '../../core/use-aws-parameters-storage';\nimport { truncate } from './table';\nimport styles from './params-table.module.css';\nimport cn from 'classnames';\nimport { SingleValueCell } from './single-value-cell';\n\nexport const MultiValueCell: FC<{ parameters: ParameterWithPrefix[]; colorClassMap: Map<string | undefined, string> }> = ({ parameters, colorClassMap }) => {\n  if (new Set(parameters.map(({ Value }) => Value)).size === 1) return <SingleValueCell parameter={parameters[0]} colorClassMap={colorClassMap} />;\n  return (\n    <td className={cn(styles.valueCell, colorClassMap.get(parameters[0].Value))}>\n      {parameters.map(({ Value, Prefix }) => {\n        const prefix = Prefix.slice(Prefix.lastIndexOf('/') + 1)\n          .replace('lservice', 'ls')\n          .replace('allapps', 'all');\n        return (\n          <p key={Value}>\n            {prefix}: {truncate(12, Value ?? '')}\n          </p>\n        );\n      })}\n    </td>\n  );\n};\n","import React, { FC, useMemo, useState } from 'react';\nimport { ParameterWithPrefix } from '../../core/use-aws-parameters-storage';\nimport styles from './params-table.module.css';\nimport _ from 'lodash';\nimport Input from '@webteam/input';\nimport { Col, Row } from '@webteam/layout';\nimport Fuse from 'fuse.js';\nimport Highlighter from 'react-highlight-words';\nimport cn from 'classnames';\nimport { MissingValueCell } from './missing-value-cell';\nimport { SingleValueCell } from './single-value-cell';\nimport { MultiValueCell } from './multi-value-cell';\nimport { SingleValueCellMenu } from './single-value-cell';\nimport 'react-contexify/dist/ReactContexify.css';\n\nconst prefixes = ['dev1', 'dev2', 'dev3', 'dev4', 'dev5', 'audt', 'stgn/blue', 'stgn/green'];\n\nexport const truncate = (n: number, s: string): string => (s.length > n ? s.slice(0, n) + '...' : s);\n\nconst colorClasses = [\n  styles.consistent0,\n  styles.consistent1,\n  styles.consistent2,\n  styles.consistent3,\n  styles.consistent4,\n  styles.consistent5,\n  styles.consistent6,\n  styles.consistent7,\n  styles.consistent8,\n];\n\nexport const PrefixRow: FC<{ paramsForName: ParameterWithPrefix[] }> = ({ paramsForName }) => {\n  const colorClassByValue = new Map(Object.entries(_.countBy(paramsForName, 'Value')).map(([value], i) => [value, colorClasses[i]]));\n  return (\n    <>\n      {prefixes.map((prefix) => {\n        const forGivenPrefix = paramsForName.filter((e) => e.Name!.includes(prefix));\n        const key = `${prefix}-value`;\n        const isValueMissing = forGivenPrefix.length <= 0;\n        const isSingleValue = forGivenPrefix.length === 1;\n\n        if (isValueMissing) return <MissingValueCell key={key} />;\n        if (isSingleValue) return <SingleValueCell key={key} parameter={forGivenPrefix[0]} colorClassMap={colorClassByValue} />;\n        return <MultiValueCell key={key} parameters={forGivenPrefix} colorClassMap={colorClassByValue} />;\n      })}\n    </>\n  );\n};\n\nexport const ParametersTable: FC<{ params: ParameterWithPrefix[] }> = ({ params }) => {\n  const [search, setSearch] = useState('');\n  const sortedParams = useMemo(() => {\n    const r = new Map<string, ParameterWithPrefix[]>();\n    params.forEach((p) => {\n      const name = p.Name!.slice(p.Prefix.length);\n      const old = r.get(name) ?? [];\n      r.set(name, [...old, p]);\n    });\n    return Array.from(r.entries())\n      .sort()\n      .map(([name, paramsForName]) => ({ name, paramsForName }));\n  }, [params]);\n  const fused: Fuse.FuseResult<any>[] = useMemo(() => {\n    if (search.trim().length === 0) return sortedParams.map((item) => ({ item, matches: [], refIndex: -1 }));\n    return new Fuse(sortedParams, {\n      keys: ['name'],\n      includeMatches: true,\n      minMatchCharLength: 2,\n      includeScore: true,\n    })\n      .search(search)\n      .filter(({ score }) => (score ?? 0) < 0.5);\n  }, [sortedParams, search]);\n\n  return (\n    <>\n      <Row size='0'>\n        <Col span={4}>\n          <Input size=\"xs\" placeholder=\"Search by param name\" onChange={(e) => setSearch(e.target.value)} />\n        </Col>\n      </Row>\n      <table className={cn('wt-table wt-table_wide wt-table_size_xs wt-offset-top-12', styles.paramsTable)}>\n        <thead className=\"wt-text-3\">\n        <tr>\n          <th className={styles.nameTh}>Name</th>\n          {prefixes.map((prefix) => (\n            <th key={prefix} className={styles.envTh}>{prefix}</th>\n          ))}\n        </tr>\n        </thead>\n        <tbody className=\"wt-text-3\">\n        {fused.map(({ item: { name, paramsForName }, matches }) => {\n          const searchWords = matches?.flatMap(({ indices }) => indices.map((tuple) => name.slice(tuple[0], tuple[1] + 1))) ?? [];\n          return (\n            <tr key={`${name}-row`}>\n              <td width={400}>\n                <Highlighter searchWords={searchWords} textToHighlight={name} />\n              </td>\n              <PrefixRow paramsForName={paramsForName} />\n            </tr>\n          );\n        })}\n        </tbody>\n      </table>\n      <SingleValueCellMenu />\n    </>\n  );\n};\n","import React, { FC, useState } from 'react';\nimport { AwsCredentials, useAwsCredentials } from '../../core/use-aws-credentials';\nimport { maskKey } from '../../common/helpers';\nimport AWS, { AWSError, Credentials } from 'aws-sdk';\nimport { ParameterWithPrefix, useAwsParametersStorage } from '../../core/use-aws-parameters-storage';\nimport dayjs from 'dayjs';\nimport { GetParametersByPathResult, Parameter } from 'aws-sdk/clients/ssm';\nimport { ErrorDiv } from '../error-div';\nimport Button from '@webteam/button';\nimport { ParametersTable } from './table';\n\ninterface Prefix {\n  tomcat: string;\n  lservice: string;\n  allapps: string;\n}\n\nconst paramsPrefixes: Prefix[] = [\n  {\n    tomcat: '/jetprofile-dev1/',\n    lservice: '/jetprofile/dev1/lservice',\n    allapps: '/jetprofile/dev1/allapps',\n  },\n  {\n    tomcat: '/jetprofile-dev2/',\n    lservice: '/jetprofile/dev2/lservice',\n    allapps: '/jetprofile/dev2/allapps',\n  },\n  {\n    tomcat: '/jetprofile-dev3/',\n    lservice: '/jetprofile/dev3/lservice',\n    allapps: '/jetprofile/dev3/allapps',\n  },\n  {\n    tomcat: '/jetprofile-dev4/',\n    lservice: '/jetprofile/dev4/lservice',\n    allapps: '/jetprofile/dev4/allapps',\n  },\n  {\n    tomcat: '/jetprofile-dev5/',\n    lservice: '/jetprofile/dev5/lservice',\n    allapps: '/jetprofile/dev5/allapps',\n  },\n  {\n    tomcat: '/jetprofile-audt/',\n    lservice: '/jetprofile/audt/lservice',\n    allapps: '/jetprofile/audt/allapps',\n  },\n  {\n    tomcat: '/jetprofile-stgn/',\n    lservice: '/jetprofile/stgn/blue/lservice',\n    allapps: '/jetprofile/stgn/blue/allapps',\n  },\n  {\n    tomcat: '/jetprofile-stgn/',\n    lservice: '/jetprofile/stgn/green/lservice',\n    allapps: '/jetprofile/stgn/green/allapps',\n  },\n];\n\nexport const MainPage: FC<{}> = () => {\n  const { credentials, removeCredentials } = useAwsCredentials();\n  const { accessKey, secretKey } = credentials ?? { accessKey: '', secretKey: '' };\n  const [loading, setLoading] = useState<string>();\n  const [errors, setErrors] = useState<AWSError[]>([]);\n  const ssm = new AWS.SSM({ region: 'eu-west-1', credentials: new Credentials(accessKey, secretKey) });\n  const { value, setValue, removeValue } = useAwsParametersStorage();\n  const { fetchedAt, parameters } = value ?? { fetchedAt: undefined, parameters: [] };\n\n  const refreshParams = async () => {\n    const result: ParameterWithPrefix[] = [];\n    const flatPrefixes = paramsPrefixes.flatMap(({ tomcat, allapps, lservice }) => [tomcat, lservice, allapps]);\n    const allPrefixes = new Set(flatPrefixes);\n    setErrors([]);\n    for (const prefix of Array.from(allPrefixes)) {\n      await new Promise((resolve) => {\n        let page = 1;\n        const request = ssm.getParametersByPath({ Path: prefix, Recursive: true, WithDecryption: true });\n        request.eachPage((err: AWSError, data: GetParametersByPathResult, doneCallback) => {\n          setLoading(`prefix '${prefix}' page ${page} (total: ${result.length})`);\n          if (err) setErrors((e) => [...e, err]);\n          if (!doneCallback?.()) {\n            if (data?.Parameters)\n              result.push(\n                ...data?.Parameters.map((e: Parameter) => {\n                  (e as ParameterWithPrefix).Prefix = prefix;\n                  return e as ParameterWithPrefix;\n                }),\n              );\n            page++;\n          }\n          if (data == null) resolve(undefined);\n          return true;\n        });\n      });\n    }\n    setValue({ fetchedAt: new Date(), parameters: result });\n    setLoading(undefined);\n  };\n\n  const onSignOut = () => {\n    removeCredentials();\n    removeValue();\n  };\n\n  return (\n    <>\n      <div className=\"wt-text-2\">\n        Using key: <strong>{maskKey(accessKey)}</strong> | Fetched <strong>{parameters?.length}</strong> parameters <strong>{fetchedAt ? dayjs(fetchedAt).fromNow() : ''}</strong> |{' '}\n        <Button size=\"xs\" mode=\"nude\" onClick={refreshParams}>\n          Refresh\n        </Button>{' '}\n        |{' '}\n        <Button size=\"xs\" mode=\"nude\" onClick={onSignOut}>\n          Sign out\n        </Button>\n      </div>\n      <div className=\"wt-offset-top-12\" />\n      {errors.length > 0 && <ErrorDiv error={new Error(`Got ${errors.length} unexpected error while refreshing params`)} />}\n      {loading === undefined && parameters?.length === 0 && (\n        <p className=\"wt-text-2\">\n          Parameters table is empty, press <strong>Refresh</strong> above to fill it\n        </p>\n      )}\n      {loading && <p className=\"wt-text-2\">Loading {loading}...</p>}\n      {!loading && parameters.length > 0 && <ParametersTable params={parameters} />}\n    </>\n  );\n};\n","import { Parameter } from 'aws-sdk/clients/ssm';\nimport { useLocalStorage } from './use-local-storage';\n\ninterface ParametersStorage {\n  fetchedAt: Date | undefined;\n  parameters: ParameterWithPrefix[];\n}\n\nexport type ParameterWithPrefix = { Prefix: string } & Parameter;\n\nexport const useAwsParametersStorage = () => {\n  return useLocalStorage<ParametersStorage>('aws-params');\n};\n","import React, { FC } from 'react';\nimport '@webteam/typography';\nimport { useAwsCredentials } from '../../core/use-aws-credentials';\nimport { CredentialsPage } from '../creds-prompt';\nimport { Route, Switch } from 'react-router-dom';\nimport { RouteWithCredentials } from '../route-with-credentials';\nimport { PageTemplate } from '../page';\nimport { MainPage } from '../main-page';\n\nexport const App: FC = () => {\n  return (\n    <PageTemplate>\n      <Switch>\n        <Route path=\"/credentials\">\n          <CredentialsPage />\n        </Route>\n        <RouteWithCredentials path=\"/\" exact={true}>\n          <MainPage />\n        </RouteWithCredentials>\n      </Switch>\n    </PageTemplate>\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport dayjs from 'dayjs';\nimport relativeTime from 'dayjs/plugin/relativeTime';\nimport 'reset-css';\nimport './styles/restore.css';\nimport '@webteam/colors/lib/index.css';\nimport { App } from './components/app';\nimport { HashRouter } from 'react-router-dom';\n\ndayjs.extend(relativeTime);\n\nReactDOM.render(\n  <React.StrictMode>\n    <HashRouter>\n      <App />\n    </HashRouter>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// reportWebVitals(console.log);\n"],"sourceRoot":""}