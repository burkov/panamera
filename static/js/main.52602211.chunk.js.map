{"version":3,"sources":["components/creds-prompt/creds-prompt.module.css","components/link-button/link-button.module.css","components/error-div/error-div.module.css","components/params-table/params-table.module.css","components/page/page.module.css","components/page/index.tsx","components/link-button/index.tsx","components/error-div/index.tsx","common/helpers.ts","components/creds-prompt/import-aws-creds.tsx","components/creds-prompt/index.tsx","components/params-table/table.tsx","components/params-table/index.tsx","core/use-aws-params-storage.ts","components/app/index.tsx","core/use-aws-credentials-storage.ts","index.tsx"],"names":["module","exports","Page","children","wide","branch","commit","date","shortHash","message","className","styles","pageContainer","wideDiv","contentWrapper","footer","dayjs","fromNow","LinkButton","rest","cn","linkButton","ErrorDiv","error","errorDiv","maskKey","key","split","map","e","i","length","join","tryCatch","block","catchBlock","r","Promise","catch","readFile","a","window","showOpenFilePicker","multiple","credentialsFileHandler","getFile","credentialsFile","name","Error","ini","text","result","parse","schema","yup","shape","aws_access_key_id","required","aws_secret_access_key","Object","entries","filter","v","isValidSync","entryName","accessKey","secretKey","ImportAwsCredentials","onCredentialsSelected","useState","setError","credentials","setCredentials","useEffect","onImportClick","undefined","size","onClick","CredentialsPrompt","span","verticalLine","prefixes","truncate","n","s","slice","colorMap","COLOR_SUCCESS","COLOR_WARNING","PrefixRow","paramsForName","Set","Value","colSpan","allTheSameRow","colors","Map","_","reverse","sortBy","countBy","console","log","prefix","forGivenPrefix","Name","includes","width","style","backgroundColor","get","list","lastIndexOf","replace","ParametersTable","params","useMemo","ps","forEach","p","add","old","set","Array","from","sort","paramsPrefixes","tomcat","lservice","allapps","ParamsTable","removeCredentials","loading","setLoading","errors","setErrors","ssm","AWS","SSM","region","Credentials","useLocalStorage","parameters","fetchedAt","setParams","newParams","Date","useAwsParamsStorage","setParameters","removeParams","useEffectOnce","refreshParams","allPrefixes","flatMap","resolve","page","getParametersByPath","Path","Recursive","WithDecryption","eachPage","err","data","doneCallback","Parameters","push","mode","App","extend","relativeTime","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.52602211.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"verticalLine\":\"creds-prompt_verticalLine__Tx2pu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"linkButton\":\"link-button_linkButton__2xyCc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"errorDiv\":\"error-div_errorDiv__1C-Yp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"allTheSameRow\":\"params-table_allTheSameRow__1KWMe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wideDiv\":\"page_wideDiv__2inSG\",\"pageContainer\":\"page_pageContainer__sagIe\",\"contentWrapper\":\"page_contentWrapper__3aSSW\",\"footer\":\"page_footer__3hx7W\",\"branch\":\"page_branch__1t1gv\"};","import React, { FC } from 'react';\nimport { Container, Hr, LayoutContent, LayoutFooter, LayoutHeader } from '@webteam/layout';\nimport GitInfo from 'react-git-info/macro';\nimport dayjs from 'dayjs';\nimport styles from './page.module.css';\n\nexport const Page: FC<{ wide: boolean }> = ({ children, wide }) => {\n  const {\n    branch,\n    commit: { date, shortHash, message },\n  } = GitInfo();\n  return !wide ? (\n    <Container className={styles.pageContainer}>\n      <div className={styles.contentWrapper}>\n        <LayoutHeader>\n          <h1 className=\"wt-h1\">Panamera: parameter naming errors resolution assistant</h1>\n        </LayoutHeader>\n        <LayoutContent className=\"wt-offset-top-24\">{children}</LayoutContent>\n      </div>\n      <LayoutFooter className={styles.footer}>\n        <Hr />\n        <p className=\"wt-text-3\">\n          {shortHash} | <span className={styles.branch}>{branch}</span> | built {dayjs(date).fromNow()} | {message}\n        </p>\n      </LayoutFooter>\n    </Container>\n  ) : (\n    <div className={styles.pageContainer + \" \" + styles.wideDiv} >\n      <div className={styles.contentWrapper}>\n        <LayoutHeader>\n          <h1 className=\"wt-h1\">Panamera: parameter naming errors resolution assistant</h1>\n        </LayoutHeader>\n        <LayoutContent className=\"wt-offset-top-24\">{children}</LayoutContent>\n      </div>\n      <LayoutFooter className={styles.footer}>\n        <Hr />\n        <p className=\"wt-text-3\">\n          {shortHash} | <span className={styles.branch}>{branch}</span> | built {dayjs(date).fromNow()} | {message}\n        </p>\n      </LayoutFooter>\n    </div>\n  );\n};\n","import React, { FC } from 'react';\nimport cn from 'classnames';\nimport styles from './link-button.module.css';\n\nexport const LinkButton: FC<React.ButtonHTMLAttributes<any>> = ({ children, ...rest }) => {\n  return (\n    <button {...rest} className={cn('wt-link', styles.linkButton)}>\n      {children}\n    </button>\n  );\n};\n","import React, { FC } from 'react';\nimport styles from './error-div.module.css';\nimport cn from 'classnames';\n\nexport const ErrorDiv: FC<React.HTMLAttributes<HTMLDivElement> & { error?: Error }> = ({ className, error }) => {\n  if (!error) return null;\n  return <div className={cn(styles.errorDiv, 'wt-text-2', className)}>Error: {error.message}</div>;\n};\n","export const maskKey = (key: string): string => {\n  return key\n    .split('')\n    .map((e, i) => (i < 6 || i > key.length - 4 ? e : '*'))\n    .join('');\n};\n\nexport const tryCatch = (block: () => void | Promise<void>, catchBlock: (e: Error) => void) => {\n  try {\n    const r = block();\n    if (r instanceof Promise) {\n      r.catch(catchBlock);\n    }\n  } catch (e) {\n    catchBlock(e);\n  }\n};\n","import React, { FC, SyntheticEvent, useEffect, useState } from 'react';\nimport { LinkButton } from '../link-button';\nimport { ErrorDiv } from '../error-div';\nimport ini from 'ini';\nimport * as yup from 'yup';\nimport { AwsCredentials } from '../../core/use-aws-credentials-storage';\nimport { List, ListItem } from '@webteam/list';\nimport { maskKey, tryCatch } from '../../common/helpers';\n\ndeclare global {\n  interface Window {\n    showOpenFilePicker: any;\n  }\n}\n\ntype CredentialsFileEntry = {\n  aws_access_key_id: string;\n  aws_secret_access_key: string;\n};\n\ntype NamedAwsCredentials = [string, AwsCredentials];\n\nconst readFile = async (): Promise<NamedAwsCredentials[]> => {\n  const [credentialsFileHandler] = await window.showOpenFilePicker({\n    multiple: false,\n  });\n  const credentialsFile: File = await credentialsFileHandler.getFile();\n  if (credentialsFile.name !== 'credentials') throw new Error(\"File should be named 'credentials'\");\n  const result = ini.parse(await credentialsFile.text());\n  const schema = yup.object().shape({\n    aws_access_key_id: yup.string().required(),\n    aws_secret_access_key: yup.string().required(),\n  });\n  return Object.entries(result)\n    .filter(([, v]) => schema.isValidSync(v))\n    .map(([entryName, { aws_access_key_id, aws_secret_access_key }]: [string, CredentialsFileEntry]) => [\n      entryName,\n      {\n        accessKey: aws_access_key_id,\n        secretKey: aws_secret_access_key,\n      },\n    ]);\n};\n\nexport const ImportAwsCredentials: FC<{ onCredentialsSelected: (credentials: AwsCredentials) => void }> = ({ onCredentialsSelected }) => {\n  const [error, setError] = useState<Error>();\n  const [credentials, setCredentials] = useState<NamedAwsCredentials[]>();\n  useEffect(() => {\n    if (credentials && credentials.length === 1) onCredentialsSelected(credentials[0][1]);\n  }, [credentials, onCredentialsSelected]);\n\n  const onImportClick = async () => {\n    setError(undefined);\n    tryCatch(async () => setCredentials(await readFile()), setError);\n  };\n\n  if (credentials)\n    return (\n      <>\n        <h4 className=\"wt-h4\">Select profile to use:</h4>\n        <div className=\"wt-offset-top-12\" />\n        <List size=\"xs\">\n          {credentials.map(([name, credentials]) => (\n            <ListItem key={name} onClick={() => onCredentialsSelected(credentials)}>\n              {name} ({maskKey(credentials.accessKey)})\n            </ListItem>\n          ))}\n        </List>\n      </>\n    );\n  return (\n    <>\n      <div className=\"wt-text-2\">\n        <LinkButton onClick={onImportClick}>Import</LinkButton> credentials from <strong>~/.aws/credentials</strong>\n        <ErrorDiv className=\"wt-offset-top-12\" error={error} />\n      </div>\n    </>\n  );\n};\n","import React, { FC } from 'react';\nimport { Page } from '../page';\nimport { Col, Row } from '@webteam/layout';\nimport styles from './creds-prompt.module.css';\nimport { ImportAwsCredentials } from './import-aws-creds';\nimport { AwsCredentials } from '../../core/use-aws-credentials-storage';\n\nexport const CredentialsPrompt: FC<{ onCredentialsSelected: (credentials: AwsCredentials) => void }> = ({ onCredentialsSelected }) => {\n  return (\n    <Page wide={false}>\n      <Row>\n        <Col span={4}>\n          <ImportAwsCredentials onCredentialsSelected={onCredentialsSelected} />\n          {/*<CredentialsManualInput />*/}\n        </Col>\n        <Col span=\"inline\">\n          <div className={styles.verticalLine} />\n        </Col>\n        <Col span=\"inline\">\n          <ul className=\"wt-ul\">\n            <li>Keys will be used for read-only operations</li>\n            <li>Keys will be stored in browser local storage</li>\n            <li>Keys will be used only from this webapp, they are not transferred anywhere</li>\n            <li>You can remove them anytime you want later by clicking 'Sign out' link</li>\n          </ul>\n        </Col>\n      </Row>\n    </Page>\n  );\n};\n","import React, { FC, useMemo } from 'react';\nimport { ParameterWithPrefix } from '../../core/use-aws-params-storage';\nimport styles from './params-table.module.css';\nimport _ from 'lodash';\nimport { COLOR_SUCCESS, COLOR_WARNING, COLOR_ERROR } from '@webteam/colors';\n\nconst prefixes = ['dev1', 'dev2', 'dev3', 'dev4', 'dev5', 'audt', 'stgn/blue', 'stgn/green'];\n\nconst truncate = (n: number, s: string): string => (s.length > n ? s.slice(0, n) + '...' : s);\n\nconst colorMap = [COLOR_SUCCESS, '#9cf55e', '#adee98', '#f5db8d', '#f3c05b', COLOR_WARNING, '#d3a301'];\n\nexport const PrefixRow: FC<{ paramsForName: ParameterWithPrefix[] }> = ({ paramsForName }) => {\n  const isAllTheSame = new Set(paramsForName.map(({ Value }) => Value)).size === 1;\n  if (isAllTheSame)\n    return (\n      <td colSpan={prefixes.length} className={styles.allTheSameRow}>\n        {truncate(64, paramsForName[0].Value!)}\n      </td>\n    );\n  const colors = new Map(_.reverse(_.sortBy(Object.entries(_.countBy(paramsForName, 'Value')), [(e) => e[1]])).map(([v], i) => [v, colorMap[i]]));\n  console.log(colors);\n  return (\n    <>\n      {prefixes.map((prefix) => {\n        const forGivenPrefix = paramsForName.filter((e) => e.Name!.includes(prefix));\n        return (\n          <td width={100} key={`${prefix}-value`} style={{ backgroundColor: forGivenPrefix.length === 0 ? '#ea6060' : colors.get(forGivenPrefix[0]?.Value ?? 'fixme') }}>\n            <pre>\n              {forGivenPrefix.length > 0\n                ? forGivenPrefix\n                    .map(({ Value, prefix }, _, list) =>\n                      list.length > 1\n                        ? `${prefix\n                            .slice(prefix.lastIndexOf('/') + 1)\n                            .replace('lservice', 'ls')\n                            .replace('allapps', 'all')}: ${truncate(32, Value!)}`\n                        : truncate(32, Value!),\n                    )\n                    .join('\\n')\n                : '<missing>'}\n            </pre>\n          </td>\n        );\n      })}\n    </>\n  );\n};\n\nexport const ParametersTable: FC<{ params: ParameterWithPrefix[] }> = ({ params }) => {\n  const map = useMemo(() => {\n    const ps = new Set<string>();\n    const r = new Map<string, ParameterWithPrefix[]>();\n    params.forEach((p) => {\n      ps.add(p.prefix);\n      const name = p.Name!.slice(p.prefix.length);\n      const old = r.get(name) ?? [];\n      r.set(name, [...old, p]);\n    });\n    return Array.from(r.entries()).sort();\n  }, [params]);\n\n  return (\n    <table className=\"wt-table wt-table_wide wt-table_size_xs\">\n      <thead className=\"wt-text-3\">\n        <tr>\n          <th>Name</th>\n          {prefixes.map((prefix) => (\n            <th key={prefix}>{prefix}</th>\n          ))}\n        </tr>\n      </thead>\n      <tbody className=\"wt-text-3\">\n        {map.map(([name, paramsForName]) => {\n          return (\n            <tr>\n              <td width={400}>{name}</td>\n              <PrefixRow paramsForName={paramsForName} />\n            </tr>\n          );\n        })}\n      </tbody>\n    </table>\n  );\n};\n","import React, { FC, useState } from 'react';\nimport { AwsCredentials } from '../../core/use-aws-credentials-storage';\nimport { LinkButton } from '../link-button';\nimport { maskKey } from '../../common/helpers';\nimport AWS, { AWSError, Credentials } from 'aws-sdk';\nimport { useEffectOnce } from 'react-use';\nimport { ParameterWithPrefix, useAwsParamsStorage } from '../../core/use-aws-params-storage';\nimport dayjs from 'dayjs';\nimport { GetParametersByPathResult, Parameter } from 'aws-sdk/clients/ssm';\nimport { ErrorDiv } from '../error-div';\nimport Button from '@webteam/button';\nimport { ParametersTable } from './table';\nimport { Page } from '../page';\n\ninterface Prefix {\n  tomcat: string;\n  lservice: string;\n  allapps: string;\n}\n\nconst paramsPrefixes: Prefix[] = [\n  {\n    tomcat: '/jetprofile-dev1/',\n    lservice: '/jetprofile/dev1/lservice',\n    allapps: '/jetprofile/dev1/allapps',\n  },\n  {\n    tomcat: '/jetprofile-dev2/',\n    lservice: '/jetprofile/dev2/lservice',\n    allapps: '/jetprofile/dev2/allapps',\n  },\n  {\n    tomcat: '/jetprofile-dev3/',\n    lservice: '/jetprofile/dev3/lservice',\n    allapps: '/jetprofile/dev3/allapps',\n  },\n  {\n    tomcat: '/jetprofile-dev4/',\n    lservice: '/jetprofile/dev4/lservice',\n    allapps: '/jetprofile/dev4/allapps',\n  },\n  {\n    tomcat: '/jetprofile-dev5/',\n    lservice: '/jetprofile/dev5/lservice',\n    allapps: '/jetprofile/dev5/allapps',\n  },\n  {\n    tomcat: '/jetprofile-audt/',\n    lservice: '/jetprofile/audt/lservice',\n    allapps: '/jetprofile/audt/allapps',\n  },\n  {\n    tomcat: '/jetprofile-stgn/',\n    lservice: '/jetprofile/stgn/blue/lservice',\n    allapps: '/jetprofile/stgn/blue/allapps',\n  },\n  {\n    tomcat: '/jetprofile-stgn/',\n    lservice: '/jetprofile/stgn/green/lservice',\n    allapps: '/jetprofile/stgn/green/allapps',\n  },\n];\n\nexport const ParamsTable: FC<{ credentials: AwsCredentials; removeCredentials: () => void }> = ({ credentials, removeCredentials }) => {\n  const { accessKey, secretKey } = credentials;\n  const [loading, setLoading] = useState<string>();\n  const [errors, setErrors] = useState<AWSError[]>([]);\n  const ssm = new AWS.SSM({ region: 'eu-west-1', credentials: new Credentials(accessKey, secretKey) });\n  const [{ fetchedAt, parameters }, setParameters, removeParams] = useAwsParamsStorage();\n  useEffectOnce(() => {});\n\n  const refreshParams = async () => {\n    const result: ParameterWithPrefix[] = [];\n    const allPrefixes = new Set(paramsPrefixes.flatMap(({ tomcat, allapps, lservice }) => [tomcat, lservice, allapps]));\n    setErrors([]);\n    for (const prefix of Array.from(allPrefixes)) {\n      console.log(prefix);\n      await new Promise((resolve) => {\n        let page = 1;\n        const request = ssm.getParametersByPath({ Path: prefix, Recursive: true, WithDecryption: true });\n        request.eachPage((err: AWSError, data: GetParametersByPathResult, doneCallback) => {\n          setLoading(`prefix '${prefix}' page ${page} (total: ${result.length})`);\n          if (err) setErrors((e) => [...e, err]);\n          if (!doneCallback?.()) {\n            if (data?.Parameters)\n              result.push(\n                ...data?.Parameters.map((e: Parameter) => {\n                  (e as ParameterWithPrefix).prefix = prefix;\n                  return e as ParameterWithPrefix;\n                }),\n              );\n            page++;\n          }\n          if (data == null) resolve(undefined);\n          return true;\n        });\n      });\n    }\n    setParameters(result);\n    setLoading(undefined);\n  };\n\n  const onSignOut = () => {\n    removeCredentials();\n    removeParams();\n  };\n\n  return (\n    <Page wide={parameters.length > 0}>\n      <div className=\"wt-text-2\">\n        Using key: <strong>{maskKey(accessKey)}</strong> | Fetched <strong>{parameters?.length}</strong> parameters <strong>{fetchedAt ? dayjs(fetchedAt).fromNow() : ''}</strong> |{' '}\n        <Button size=\"xs\" mode=\"nude\" onClick={refreshParams}>\n          Refresh\n        </Button>{' '}\n        |{' '}\n        <Button size=\"xs\" mode=\"nude\" onClick={onSignOut}>\n          Sign out\n        </Button>\n      </div>\n      <div className=\"wt-offset-top-12\" />\n      {errors.length > 0 && <ErrorDiv error={new Error(`Got ${errors.length} unexpected error while refreshing params`)} />}\n      {loading === undefined && parameters?.length === 0 && (\n        <p className=\"wt-text-2\">\n          Parameters table is empty, press <strong>Refresh</strong> above to fill it\n        </p>\n      )}\n      {loading && <p className=\"wt-text-2\">Loading {loading}...</p>}\n      {!loading && <ParametersTable params={parameters} />}\n    </Page>\n  );\n};\n","import { useLocalStorage } from 'react-use';\nimport { Parameter } from 'aws-sdk/clients/ssm';\n\ninterface ParametersStorage {\n  fetchedAt: Date | undefined;\n  parameters: ParameterWithPrefix[];\n}\n\nexport type ParameterWithPrefix = { prefix: string } & Parameter;\n\nexport const useAwsParamsStorage = (): [ParametersStorage, (params: ParameterWithPrefix[]) => void, () => void] => {\n  const [params, setParams, removeParams] = useLocalStorage<ParametersStorage>('aws-params', { parameters: [], fetchedAt: undefined });\n  const setParamsAndDate = (newParams: ParameterWithPrefix[]) => {\n    setParams({ fetchedAt: new Date(), parameters: newParams });\n  };\n  return [params!, setParamsAndDate, removeParams];\n};\n","import React, { FC } from 'react';\nimport '@webteam/typography';\nimport { useAwsCredentialsStorage } from '../../core/use-aws-credentials-storage';\nimport { CredentialsPrompt } from '../creds-prompt';\nimport { ParamsTable } from '../params-table';\nimport { Page } from '../page';\n\nexport const App: FC = ({}) => {\n  const [credentials, setCredentials, removeCredentials] = useAwsCredentialsStorage();\n  return (\n      credentials === undefined ? <CredentialsPrompt onCredentialsSelected={setCredentials} /> : <ParamsTable credentials={credentials} removeCredentials={removeCredentials} />\n  );\n};\n","import { useLocalStorage } from 'react-use';\n\nexport interface AwsCredentials {\n  accessKey: string;\n  secretKey: string;\n}\n\nexport const useAwsCredentialsStorage = () => useLocalStorage<AwsCredentials>('aws-credentials');\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport dayjs from 'dayjs';\nimport relativeTime from 'dayjs/plugin/relativeTime';\nimport 'reset-css';\nimport './styles/restore.css';\nimport '@webteam/colors/lib/index.css';\nimport { App } from './components/app';\n\ndayjs.extend(relativeTime);\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// reportWebVitals(console.log);\n"],"sourceRoot":""}